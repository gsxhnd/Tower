// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/gsxhnd/go-api-template/middleware"
	"github.com/gsxhnd/go-api-template/service_a/db"
	"github.com/gsxhnd/go-api-template/service_a/handler"
	"github.com/gsxhnd/go-api-template/service_a/routes"
	"github.com/gsxhnd/go-api-template/service_a/service"
	"github.com/gsxhnd/go-api-template/utils"
)

// Injectors from wire.go:

func InitApp() (*Application, error) {
	config, err := utils.NewConfig()
	if err != nil {
		return nil, err
	}
	logger := utils.NewLogger(config)
	database, err := db.NewDatabase(config, logger)
	if err != nil {
		return nil, err
	}
	pingService := service.NewPingService(logger, database)
	rootHandler := handler.NewRootHandler(logger, pingService)
	websocketHandler := handler.NewWebsocketHandler(logger)
	handlerHandler := handler.Handler{
		RootHandler:      rootHandler,
		WebsocketHandler: websocketHandler,
	}
	tracer, err := utils.NewTracer(config)
	if err != nil {
		return nil, err
	}
	middlewarer := middleware.NewMiddleware(logger, tracer)
	router, err := routes.NewRouter(config, handlerHandler, middlewarer)
	if err != nil {
		return nil, err
	}
	application := NewApplication(router)
	return application, nil
}

func InitTask() (*Task, error) {
	task := NewTask()
	return task, nil
}
